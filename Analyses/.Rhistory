percent_nitrogen_lmer = lmer((cn) ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
plot(resid(percent_nitrogen_lmer) ~ fitted(percent_nitrogen_lmer)) # check  the residuals
plot(resid(percent_nitrogen_lmer) ~ fitted(percent_nitrogen_lmer)) # check  the residuals
plot(resid(percent_nitrogen_lmer) ~ fitted(percent_nitrogen_lmer)) # check  the residuals
#### define the mixed effects model
percent_nitrogen_lmer = lmer(log(cn) ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
plot(resid(percent_nitrogen_lmer) ~ fitted(percent_nitrogen_lmer)) # check  the residuals
#### define the mixed effects model
percent_nitrogen_lmer = lmer(nitrogen_percent ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
plot(resid(percent_nitrogen_lmer) ~ fitted(percent_nitrogen_lmer)) # check  the residuals
Anova(percent_nitrogen_lmer) # check statistical significance of main effects
emmeans(percent_nitrogen_lmer, ~treatment)
cld(emmeans(percent_nitrogen_lmer, ~treatment))
Anova(percent_nitrogen_lmer) # check statistical significance of main effects
cld(emmeans(percent_nitrogen_lmer, ~species))
Anova(percent_nitrogen_lmer) # check statistical significance of main effects
cld(emmeans(percent_nitrogen_lmer, ~treatment*species))
cld(emmeans(percent_nitrogen_lmer, ~organ*species))
#### define the mixed effects model
percent_nitrogen_lmer = lmer(log(cn) ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
Anova(percent_nitrogen_lmer) # check statistical significance of main effects
#### define the mixed effects model
cn_lmer = lmer(log(cn) ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
plot(resid(cn_lmer) ~ fitted(cn_lmer)) # check  the residuals
summary(cn_lmer) # look at slope coefficients
Anova(cn_lmer) # check statistical significance of main effects
cld(emmeans(cn_lmer, ~treatment)) # CN decreases with salt, interesting!
Anova(cn_lmer) # check statistical significance of main effects
cld(emmeans(cn_lmer, ~treatment*species)) # SG is most sensitive
cld(emmeans(cn_lmer, ~treatment, at = list(species=='SG'))) # SG is most sensitive
cld(emmeans(cn_lmer, ~treatment, at = list(species=='SG'))) # SG is most sensitive
cld(emmeans(cn_lmer, ~treatment, at = list(species='SG'))) # SG is most sensitive
cld(emmeans(cn_lmer, ~1, at = list(species=='SG'))) # SG is most sensitive
?emmeans
cld(emmeans(cn_lmer, ~treatment*species)) # SG is most sensitive
mass_values_lmer = lmer(log(mass + 0.001) ~ treatment * species * organ + (1|block),
data = mass_data)
plot(resid(mass_values_lmer) ~ fitted (mass_values_lmer)) # slight horn shape here, need to transform
Anova(mass_values_lmer)
cld(emmeans(mass_values_lmer, ~treatment)) # mass decreases with salinity treatment
cld(emmeans(mass_values_lmer, ~treatment * species)) # BG has highest sensitivity; others not strongly effected
cld(emmeans(cn_lmer, ~species))
#### define the mixed effects model
height_values_lmer = lmer(log(Height_cm) ~ treatment * species * (1|Sample) + (1|block),
data = height_data)
Anova(height_values_lmer)
cld(emmeans(height_values_lmer, ~treatment)) # salt treatment are shorter
cld(emmeans(height_values_lmer, ~treatment*species)) # BG is most sensitive, others not as much
cld(emmeans(percent_nitrogen_lmer, ~species))
cld(emmeans(cn_lmer, ~species))
#### define the mixed effects model
percent_nitrogen_lmer = lmer(nitrogen_percent ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
cld(emmeans(percent_nitrogen_lmer, ~species))
library(ggplot2)
## make plots
ggplot(aes(x = mass, y = species, data = mass_data)) + geom_boxplot()
## make plots
ggplot(mass_data, aes(x = mass, y = species)) + geom_boxplot()
## make plots
ggplot(mass_data, aes(x = species, y = mass)) + geom_boxplot()
## make plots
ggplot(data = mass_data, aes(x = species, y = mass, fill = treatment)) + geom_boxplot()
ggplot(data = mass_data, aes(x = treatment, y = mass)) + geom_boxplot()
## make plots
ggplot(data = mass_data, aes(x = species, y = mass, fill = treatment)) + geom_boxplot()
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = treatment)) +
theme(legend.position = 'right', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot()
mass_plot
## make plots
mass_data$salt_treatment[mass_data$treatment == '0'] <- 'None'
mass_data$salt_treatment
## make plots
mass_data$salt_treatment = factor(mass_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'right', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot()
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'right', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys")
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'right', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)')
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 6), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)')
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 1), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)')
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)')
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') +
ylim(0, 8)
mass_plot
mass_plot = ggplot(data = mass_data, aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') +
ylim(0, 8) +
ylab('Mass (g)') +
xlab('Species')
mass_plot
head(height_data)
### height plot
height_data$salt_treatment = factor(mass_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
### height plot
height_data$salt_treatment = factor(height_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
mass_plot = ggplot(data = height_data, aes(x = species, y = Height_cm, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 8) + # change y-axis limits on graph
ylab('Mass (g)') +  # change label on y-axis
xlab('Species') # change label on x axis
height_plot = ggplot(data = height_data, aes(x = species, y = Height_cm, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 8) + # change y-axis limits on graph
ylab('Mass (g)') +  # change label on y-axis
xlab('Species') # change label on x axis
height_plot
#### define the mixed effects model
percent_nitrogen_lmer = lmer(log(nitrogen_percent) ~ treatment * species * organ + (1|block),
data = cn_data) # fit the model
plot(resid(percent_nitrogen_lmer) ~ fitted(percent_nitrogen_lmer)) # check  the residuals
summary(percent_nitrogen_lmer) # look at slope coefficients
Anova(percent_nitrogen_lmer) # check statistical significance of main effects
cld(emmeans(percent_nitrogen_lmer, ~treatment))
cld(emmeans(percent_nitrogen_lmer, ~species))
cld(emmeans(percent_nitrogen_lmer, ~treatment*species))
height_plot
height_plot = ggplot(data = height_data, aes(x = species, y = Height_cm, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 120) + # change y-axis limits on graph
ylab('Height (cm)') +  # change label on y-axis
xlab('Species') # change label on x axis
height_plot
### percent N plot
cn_data$salt_treatment = factor(cn_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
percent_nitrogen_plot = ggplot(data = hcn_data, aes(x = species, y = percent_nitrogen, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 120) + # change y-axis limits on graph
ylab('Height (cm)') +  # change label on y-axis
xlab('Species') # change label on x axis
percent_nitrogen_plot = ggplot(data = cn_data, aes(x = species, y = percent_nitrogen, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 120) + # change y-axis limits on graph
ylab('Height (cm)') +  # change label on y-axis
xlab('Species') # change label on x axis
percent_nitrogen_plot
percent_nitrogen_plot = ggplot(data = cn_data, aes(x = species, y = nitrogen_percent, fill = salt_treatment)) +
theme(legend.position = c(0.8, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 120) + # change y-axis limits on graph
ylab('Height (cm)') +  # change label on y-axis
xlab('Species') # change label on x axis
percent_nitrogen_plot
percent_nitrogen_plot = ggplot(data = cn_data, aes(x = species, y = nitrogen_percent, fill = salt_treatment)) +
theme(legend.position = c(0.85, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 120) + # change y-axis limits on graph
ylab('Height (cm)') +  # change label on y-axis
xlab('Species') # change label on x axis
percent_nitrogen_plot
percent_nitrogen_plot = ggplot(data = cn_data, aes(x = species, y = nitrogen_percent, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 6) + # change y-axis limits on graph
ylab('Height (cm)') +  # change label on y-axis
xlab('Species') # change label on x axis
percent_nitrogen_plot
percent_nitrogen_plot = ggplot(data = cn_data, aes(x = species, y = nitrogen_percent, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 6) + # change y-axis limits on graph
ylab('Shoot N (%)') +  # change label on y-axis
xlab('Species') # change label on x axis
percent_nitrogen_plot
cnn_plot = ggplot(data = cn_data, aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 6) + # change y-axis limits on graph
ylab('Shoot N (%)') +  # change label on y-axis
xlab('Species') # change label on x axis
cn_plot = ggplot(data = cn_data, aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 6) + # change y-axis limits on graph
ylab('Shoot N (%)') +  # change label on y-axis
xlab('Species') # change label on x axis
cn_plot
cn_plot = ggplot(data = cn_data, aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 120) + # change y-axis limits on graph
ylab('Shoot N (%)') +  # change label on y-axis
xlab('Species') # change label on x axis
cn_plot
cn_plot = ggplot(data = cn_data, aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 150) + # change y-axis limits on graph
ylab('Shoot N (%)') +  # change label on y-axis
xlab('Species') # change label on x axis
cn_plot
height_plot
cn_plot = ggplot(data = cn_data, aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 150) + # change y-axis limits on graph
ylab('Shoot C:N') +  # change label on y-axis
xlab('Species') # change label on x axis
cn_plot
head(cn_data)
head(mass_data)
### combine mass and percent N data to get whole plant N
cn_mass_data = left_join(mass_data, cn_data, by.x = pot, by.y = sample_id)
library(dplyr)
### combine mass and percent N data to get whole plant N
cn_mass_data = left_join(mass_data, cn_data, by.x = pot, by.y = sample_id)
head(cn_mass_data)
nrow(cn_mass_data)
cn_mass_data$nitrogen_percent_total = (cn_mass_data$nitrogen_percent / 100) * cn_mass_data$mass
nitrogen_percent_total_lmer = lmer(nitrogen_percent_total ~ treatment * species * organ + (1|block),
data = cn_mass_data)
plot(resid(nitrogen_percent_total_lmer) ~ fitted (nitrogen_percent_total_lmer)) # slight horn shape here, need to transform
nitrogen_percent_total_lmer = lmer(log(nitrogen_percent_total) ~ treatment * species * organ + (1|block),
data = cn_mass_data)
plot(resid(nitrogen_percent_total_lmer) ~ fitted (nitrogen_percent_total_lmer)) # slight horn shape here, need to transform
Anova(nitrogen_percent_total_lmer)
cld(emmeans(nitrogen_percent_total_lmer, ~treatment)) # mass decreases with salinity treatment
cld(emmeans(nitrogen_percent_total_lmer, ~species)) # BM is heaviest
cld(emmeans(nitrogen_percent_total_lmer, ~species)) # BM has most
cld(emmeans(nitrogen_percent_total_lmer, ~treatment * species)) # BG has highest sensitivity; others not strongly effected
### mass N plot
cn_mass_data$salt_treatment = factor(cn_mass_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
head(cn_mass_data)
mass_plot = ggplot(data = cn_mass_data, aes(x = species, y = nitrogen_percent_total, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
#ylim(0, 8) + # change y-axis limits on graph
ylab('Mass (g)') +  # change label on y-axis
xlab('Species') # change label on x axis
mass_plot
mass_plot = ggplot(data = cn_mass_data, aes(x = species, y = nitrogen_percent_total, fill = salt_treatment)) +
theme(legend.position = c(0.84, 0.8), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 0.08) + # change y-axis limits on graph
ylab('Mass N (g)') +  # change label on y-axis
xlab('Species') # change label on x axis
mass_plot
