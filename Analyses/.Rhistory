theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), labels = NULL)
germination_plot_continuous
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), labels = NULL) +
geom_jitter(height = 0, width = 1, alpha = 0.5) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
germination_plot_continuous
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), labels = NULL) +
geom_jitter(height = 0, width = 1, alpha = 0.5) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
germination_plot_continuous
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 8, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), labels = NULL) +
geom_jitter(height = 0, width = 1, alpha = 0.5, pch = 4, size = 2) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 8, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), guide = 'none') +
geom_jitter(height = 0, width = 1, alpha = 0.1, pch = 4, size = 4) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 8, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), guide = 'none') +
geom_jitter(height = 0, width = 1, alpha = 0.3, pch = 4, size = 4) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 8, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 10, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), guide = 'none') +
geom_jitter(height = 0, width = 1, alpha = 0.3, pch = 4, size = 6) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 10, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), guide = 'none') +
geom_jitter(height = 0, width = 3, alpha = 0.3, pch = 4, size = 6) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 10, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), guide = 'none') +
geom_jitter(height = 0, width = 1, alpha = 0.3, pch = 4, size = 6, lwd = 3) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
germination_plot_continuous = ggplot(data = germination_data,
aes(y = germination, x = treatment, colour = species,
linetype = species)) +
theme(legend.position = 'right',
# legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30),
legend.text.align = 0) +
scale_colour_manual(values = c('red', 'blue', 'orange', 'purple'),
name = "Species",
labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
scale_linetype_manual(values = c(1, 2, 2, 2), guide = 'none') +
geom_jitter(height = 0, width = 1, alpha = 0.3, pch = 4, size = 6) +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, lwd = 2) +
xlab('Salinity treatment (dS/m)') +
ylab('Prob. of germination')
jpeg(filename = "plots/revised/revised2/Figure1.jpeg", width = 10, height = 8,
units = 'in', res = 600)
plot(germination_plot_continuous)
dev.off()
## load packages
### install.packages('stringr')
library(stringr)
library(lme4)
library(car)
library(emmeans)
library(ggplot2)
library(dplyr)
library(ciTools)
library(gtable)
library(grid)
library(gridExtra)
## define a function for multi-panel plots
multiplot <- function(..., plotlist=NULL, cols) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# Make the panel
plotCols = cols                          # Number of columns of plots
plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
# Make each plot, in the correct location
for (i in 1:numPlots) {
curRow = ceiling(i/plotCols)
curCol = (i-1) %% plotCols + 1
print(plots[[i]], vp = vplayout(curRow, curCol ))
}
}
## load data
cn_data_raw = read.csv('../Data/saltygrass_cn.csv')
height_data_raw = read.csv('../Data/Finalized_Height_Data_Linear.csv')
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
germination_data_raw = read.csv("../Data/germination_data.csv")
## curate the CN data
### remove the QC values
cn_data_noQC = subset(cn_data_raw, sample_id != 'QC')
### change sample id to character
cn_data_noQC$sample_id = as.character(cn_data_noQC$sample_id)
### adding missing periods
cn_data_noQC$sample_id[2] = "LB.1.8.S"
cn_data_noQC$sample_id[3] = "LB.1.16.S"
cn_data_noQC$sample_id[4] = "LB.1.24.S"
cn_data_noQC$sample_id[5] = "LB.2.0.S"
cn_data_noQC$sample_id[6] = "LB.2.8.S"
cn_data_noQC$sample_id[7] = "LB.2.16.S"
cn_data_noQC$sample_id[8] = "LB.2.24.S"
cn_data_noQC$sample_id[9] = "LB.3.0.S"
cn_data_noQC$sample_id[10] = "LB.3.8.S"
cn_data_noQC$sample_id[11] = "LB.3.16.S"
cn_data_noQC$sample_id[98] = "SG.1.8.R"
### split the sample id into separate columns
sample_id_list_cn = strsplit(as.character(cn_data_noQC$sample_id), "[.]")
cn_data_noQC$species = unlist(lapply(sample_id_list_cn, `[[`, 1))
cn_data_noQC$block = unlist(lapply(sample_id_list_cn, `[[`, 2))
cn_data_noQC$treatment = unlist(lapply(sample_id_list_cn, `[[`, 3))
cn_data_noQC$organ = unlist(lapply(sample_id_list_cn, `[[`, 4))
cn_data = cn_data_noQC
## curate the height data
## split the sample id into separate columns
sample_id_list_height = strsplit(as.character(height_data_raw$Sample), "[.]")
height_data_raw$treatment = unlist(lapply(sample_id_list_height, `[[`, 2))
height_data_raw$rep = unlist(lapply(sample_id_list_height, `[[`, 3))
height_data_raw_sample_block =strsplit(unlist(lapply(sample_id_list_height, `[[`, 1)),
"(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)
height_data_raw$block = unlist(lapply(height_data_raw_sample_block, '[[', 2))
height_data_raw$species = unlist(lapply(height_data_raw_sample_block, '[[', 1))
height_data = height_data_raw
## curate the mass data
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$pot), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data = mass_data_raw
## curate the germination data (nothing to do really)
germination_data = germination_data_raw
cn_data$treatment_continuous = as.numeric(cn_data$treatment)
#### see what class each variable is
class(cn_data$species)
class(cn_data$treatment)
class(cn_data$organ)
class(cn_data$block)
class(cn_data$nitrogen_percent)
percent_nitrogen_lmer_continuous = lmer(log(nitrogen_percent) ~ treatment_continuous * species * organ + (1|block),
data = cn_data) # fit the model
Anova(percent_nitrogen_lmer_continuous, test.statistic = 'F')
#### create new variable for CN
cn_data$cn = cn_data$carbon_weight / cn_data$nitrogen_weight
cn_lmer_continuous = lmer(log(cn) ~ treatment_continuous * species * organ + (1|block),
data = cn_data) # fit the model
Anova(cn_lmer_continuous, test.statistic = 'F')
test(emtrends(cn_lmer_continuous, ~species, var = 'treatment_continuous'))
cld(emtrends(cn_lmer_continuous, ~species, var = 'treatment_continuous'))
#### mass data continuous treatment
mass_data$treatment_continuous = as.numeric(mass_data$treatment)
mass_values_lmer_continuous = lmer(log(mass + 0.001) ~ treatment_continuous * species * organ + (1|block),
data = mass_data)
Anova(mass_values_lmer_continuous, test_statistic = 'F')
test(emtrends(mass_values_lmer_continuous, ~species, var = 'treatment_continuous'))
cld(emtrends(mass_values_lmer_continuous, ~species, var = 'treatment_continuous'))
#### make new variable for treatment factor
germination_data$treatment_factor = as.factor(germination_data$treatment)
germination_lm_continuous = glm(germination ~ treatment*species, data = germination_data, family = 'binomial')
Anova(germination_lm_continuous, test.statistic = 'F')
test(emtrends(germination_lm_continuous, ~species, var = 'treatment'))
cld(emtrends(germination_lm_continuous, ~species, var = 'treatment'))
### percent nitrogen table
write.csv(Anova(percent_nitrogen_lmer_continuous, test.statistic = 'F'),
'tables/revised2/percent_nitrogen_anova_F.csv')
### cn table
write.csv(Anova(cn_lmer_continuous, test.statistic = 'F'),
'tables/revised2/cn_anova_F.csv')
### mass table
write.csv(Anova(mass_values_lmer_continuous, test.statistic = 'F'),
'tables/revised2/mass_anova_F.csv')
### germination table
write.csv(Anova(germination_lm_continuous, test.statistic = 'F'),
'tables/revised2/germination_anova_F.csv')
## slope and intercept tables
### germination
write.csv(summary(test(emtrends(germination_lm_continuous, ~species,
var = 'treatment', type = 'response'))),
'tables/revision2/slopes_intercepts/germination_slope.csv')
## slope and intercept tables
### germination
write.csv(summary(test(emtrends(germination_lm_continuous, ~species,
var = 'treatment', type = 'response'))),
'tables/revised2/slopes_intercepts/germination_slope.csv')
## slope and intercept tables
### germination
write.csv(test(emtrends(germination_lm_continuous, ~species,
var = 'treatment', type = 'response')),
'tables/revised2/slopes_intercepts/germination_slope.csv')
germination_lm_continuous
write.csv(test(emmeans(germination_lm_continuous, ~species,
var = 'treatment', type = 'response', at = list(treatment = 0))),
'tables/revised2/slopes_intercepts/germination_intercept.csv')
test(emmeans(germination_lm_continuous, ~species,
var = 'treatment', type = 'response', at = list(treatment = 0)))
test(emmeans(germination_lm_continuous, ~species,
var = 'treatment', at = list(treatment = 0)))
test(emtrends(germination_lm_continuous, ~species,
var = 'treatment'))
## slope and intercept tables
### germination
write.csv(test(emtrends(germination_lm_continuous, ~species,
var = 'treatment')),
'tables/revised2/slopes_intercepts/germination_slope.csv')
write.csv(test(emmeans(germination_lm_continuous, ~species,
var = 'treatment', at = list(treatment = 0))),
'tables/revised2/slopes_intercepts/germination_intercept.csv')
?test
test(emtrends(germination_lm_continuous, ~species,
var = 'treatment'))
cld(emtrends(germination_lm_continuous, ~species,
var = 'treatment'))
### mass
write.csv(test(emtrends(mass_values_lmer_continuous, ~species,
var = 'treatment')),
'tables/revised2/slopes_intercepts/mass_slope.csv')
### mass
write.csv(test(emtrends(mass_values_lmer_continuous, ~species,
var = 'treatment_continuous')),
'tables/revised2/slopes_intercepts/mass_slope.csv')
cld(emtrends(mass_values_lmer_continuous, ~species,
var = 'treatment_continuous'))
### percent N
write.csv(test(emtrends(nitrogen_percent_lmer_continuous, ~species,
var = 'treatment_continuous')),
'tables/revised2/slopes_intercepts/nitrogen_percent_slope.csv')
test(emtrends(nitrogen_percent_lmer_continuous, ~species,
var = 'treatment_continuous'))
test(emtrends(percent_nitrogen_lmer_continuous, ~species, var = 'treatment_continuous'))
cld(emtrends(percent_nitrogen_lmer_continuous, ~species,
var = 'treatment_continuous'))
### percent N
write.csv(test(emtrends(percent_nitrogen_lmer_continuous, ~species,
var = 'treatment_continuous')),
'tables/revised2/slopes_intercepts/percent_nitrogent_slope.csv')
cld(emtrends(percent_nitrogen_lmer_continuous, ~species,
var = 'treatment_continuous'))
### C:N
write.csv(test(emtrends(cn_lmer_continuous, ~species,
var = 'treatment_continuous')),
'tables/revised2/slopes_intercepts/cn_slope.csv')
cld(emtrends(cn_lmer_continuous, ~species,
var = 'treatment_continuous'))
test(emtrends(cn_lmer_continuous, ~species,
var = 'treatment_continuous'))
cld(emtrends(mass_values_lmer_continuous, ~species,
var = 'treatment_continuous'))
cld(emtrends(percent_nitrogen_lmer_continuous, ~species,
var = 'treatment_continuous'))
cld(emtrends(cn_lmer_continuous, ~species,
var = 'treatment_continuous'))
cld(emmeans(germination_lm_continuous, ~species))
Anova(mass_values_lmer_continuous, test_statistic = 'F')
test(emtrends(mass_values_lmer_continuous, ~species, var = 'treatment_continuous'))
cld(emtrends(mass_values_lmer_continuous, ~species, var = 'treatment_continuous'))
Anova(percent_nitrogen_lmer_continuous, test.statistic = 'F')
test(emtrends(percent_nitrogen_lmer_continuous, ~species, var = 'treatment_continuous'))
test(emtrends(cn_lmer_continuous, ~species, var = 'treatment_continuous'))
cld(emtrends(cn_lmer_continuous, ~species, var = 'treatment_continuous'))
