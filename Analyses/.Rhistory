## load packages
### install.packages('stringr')
library(stringr)
## load data
cn_data_raw = read.csv('../Data/saltygrass_cn.csv')
height_data_raw = read.csv('../Data/Finalized_Height_Data_Linear.csv')
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
getwd()
mass_data_raw = read.csv("/Users/nicksmith/Documents/Git/SaltyGrass/Data/Mass_Measurements.csv")
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
## curate the CN data
### remove the QC values
cn_data_noQC = subset(cn_data_raw, sample_id != 'QC')
### change sample id to character
cn_data_noQC$sample_id = as.character(cn_data_noQC$sample_id)
### adding missing periods
cn_data_noQC$sample_id[2] = "LB.1.8.S"
cn_data_noQC$sample_id[3] = "LB.1.16.S"
cn_data_noQC$sample_id[4] = "LB.1.24.S"
cn_data_noQC$sample_id[5] = "LB.2.0.S"
cn_data_noQC$sample_id[6] = "LB.2.8.S"
cn_data_noQC$sample_id[7] = "LB.2.16.S"
cn_data_noQC$sample_id[8] = "LB.2.24.S"
cn_data_noQC$sample_id[9] = "LB.3.0.S"
cn_data_noQC$sample_id[10] = "LB.3.8.S"
cn_data_noQC$sample_id[11] = "LB.3.16.S"
cn_data_noQC$sample_id[98] = "SG.1.8.R"
### split the sample id into separate columns
sample_id_list_cn = strsplit(as.character(cn_data_noQC$sample_id), "[.]")
cn_data_noQC$species = unlist(lapply(sample_id_list_cn, `[[`, 1))
cn_data_noQC$block = unlist(lapply(sample_id_list_cn, `[[`, 2))
cn_data_noQC$treatment = unlist(lapply(sample_id_list_cn, `[[`, 3))
cn_data_noQC$organ = unlist(lapply(sample_id_list_cn, `[[`, 4))
cn_data = cn_data_noQC
## curate the height data
## split the sample id into separate columns
sample_id_list_height = strsplit(as.character(height_data_raw$Sample), "[.]")
height_data_raw$treatment = unlist(lapply(sample_id_list_height, `[[`, 2))
height_data_raw$rep = unlist(lapply(sample_id_list_height, `[[`, 3))
height_data_raw_sample_block =strsplit(height_data_raw_sample_block,
"(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)
height_data_raw$block = unlist(lapply(height_data_raw_sample_block, '[[', 2))
height_data_raw$species = unlist(lapply(height_data_raw_sample_block, '[[', 1))
height_data = height_data_raw
## curate the mass data
## curate the height data
## split the sample id into separate columns
sample_id_list_height = strsplit(as.character(height_data_raw$Sample), "[.]")
height_data_raw$treatment = unlist(lapply(sample_id_list_height, `[[`, 2))
height_data_raw$rep = unlist(lapply(sample_id_list_height, `[[`, 3))
height_data_raw_sample_block =strsplit(height_data_raw,
"(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)
as.character(height_data_raw$Sample)
## curate the height data
## split the sample id into separate columns
sample_id_list_height = strsplit(as.character(height_data_raw$Sample), "[.]")
sample_id_list_height
unlist(lapply(sample_id_list_height, `[[`, 2))
unlist(lapply(sample_id_list_height, `[[`, 3))
sample_id_list_height
height_data_raw_sample_block =strsplit(unlist(lapply(sample_id_list_height, `[[`, 1)),
"(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)
height_data_raw_sample_block
height_data_raw$block = unlist(lapply(height_data_raw_sample_block, '[[', 2))
height_data_raw$block
height_data_raw$species = unlist(lapply(height_data_raw_sample_block, '[[', 1))
height_data_raw$species
height_data = height_data_raw
head(mass_data_raw)
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$pot), "[.]")
sample_id_list_mass
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$POT), "[.]")
sample_id_list_mass
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data_raw$species
mass_data_raw$block
mass_data_raw$treatment
mass_data_raw$organ = unlist(lapply(sample_id_list_mass, `[[`, 4))
mass_data_raw$organ
sample_id_list_mass
unlist(lapply(sample_id_list_mass, `[[`, 4))
unlist(lapply(sample_id_list_mass, `[[`, 3))
unlist(lapply(sample_id_list_mass, `[[`, 4))
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data_raw$organ = unlist(lapply(sample_id_list_mass, `[[`, 4))
sample_id_list_mass = strsplit(as.character(mass_data_raw$POT), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data_raw$organ = unlist(lapply(sample_id_list_mass, `[[`, 4))
mass_data_raw$organ
cn_data_raw = read.csv('../Data/saltygrass_cn.csv')
height_data_raw = read.csv('../Data/Finalized_Height_Data_Linear.csv')
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
sample_id_list_mass = strsplit(as.character(mass_data_raw$POT), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data = mass_data_raw
head(mass_data)
mass_data_raw$species
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$POT), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$species
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$pot), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data = mass_data_raw
head(mass_data)
head(cn_data)
### head(cn_data)
class(cn_data$species)
class(cn_data$treatment)
class(cn_data$organ)
class(cn_data$block)
#### define independent variables as correct class
cn_data$species_factor = as.factor(cn_data$species)
cn_data$species_factor
cn_data$treatment_factor = as.factor(cn_data$treatment)
cn_data$organ_factor = as.factor(cn_data$organ)
cn_data$block_factor = as.factor(cn_data$block)
cn_data$block_factor
cn_data$organ_factor
cn_data[141,]
library(stringr)
## load data
cn_data_raw = read.csv('../Data/saltygrass_cn.csv')
height_data_raw = read.csv('../Data/Finalized_Height_Data_Linear.csv')
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
## curate the CN data
### remove the QC values
cn_data_noQC = subset(cn_data_raw, sample_id != 'QC')
### change sample id to character
cn_data_noQC$sample_id = as.character(cn_data_noQC$sample_id)
### adding missing periods
cn_data_noQC$sample_id[2] = "LB.1.8.S"
cn_data_noQC$sample_id[3] = "LB.1.16.S"
cn_data_noQC$sample_id[4] = "LB.1.24.S"
cn_data_noQC$sample_id[5] = "LB.2.0.S"
cn_data_noQC$sample_id[6] = "LB.2.8.S"
cn_data_noQC$sample_id[7] = "LB.2.16.S"
cn_data_noQC$sample_id[8] = "LB.2.24.S"
cn_data_noQC$sample_id[9] = "LB.3.0.S"
cn_data_noQC$sample_id[10] = "LB.3.8.S"
cn_data_noQC$sample_id[11] = "LB.3.16.S"
cn_data_noQC$sample_id[98] = "SG.1.8.R"
### split the sample id into separate columns
sample_id_list_cn = strsplit(as.character(cn_data_noQC$sample_id), "[.]")
cn_data_noQC$species = unlist(lapply(sample_id_list_cn, `[[`, 1))
cn_data_noQC$block = unlist(lapply(sample_id_list_cn, `[[`, 2))
cn_data_noQC$treatment = unlist(lapply(sample_id_list_cn, `[[`, 3))
cn_data_noQC$organ = unlist(lapply(sample_id_list_cn, `[[`, 4))
cn_data = cn_data_noQC
## curate the height data
## split the sample id into separate columns
sample_id_list_height = strsplit(as.character(height_data_raw$Sample), "[.]")
height_data_raw$treatment = unlist(lapply(sample_id_list_height, `[[`, 2))
height_data_raw$rep = unlist(lapply(sample_id_list_height, `[[`, 3))
height_data_raw_sample_block =strsplit(unlist(lapply(sample_id_list_height, `[[`, 1)),
"(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)
height_data_raw$block = unlist(lapply(height_data_raw_sample_block, '[[', 2))
height_data_raw$species = unlist(lapply(height_data_raw_sample_block, '[[', 1))
height_data = height_data_raw
## curate the mass data
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$pot), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data = mass_data_raw
## hypothesis testing
### Does salinity affect nitrogen concentration and does this vary by species?
### Increasing salinity will reduce nitrogen concentration becuase XXXXXXXX
#### take a look at the top 6 rows
### head(cn_data)
#### see what class each variable is
class(cn_data$species)
class(cn_data$treatment)
class(cn_data$organ)
class(cn_data$block)
#### define independent variables as correct class
cn_data$species_factor = as.factor(cn_data$species)
cn_data$treatment_factor = as.factor(cn_data$treatment)
cn_data$organ_factor = as.factor(cn_data$organ)
cn_data$block_factor = as.factor(cn_data$block)
cn_data$organ_factor
cn_data$treatment_factor
cn_data$species_factor
head(cn_data)
class(cn_data$nitrogen_percent)
library(lme4)
#### define the mixed effects model
percent_nitrogen_lmer = lmer(nitrogen_percent ~ treatment + species + organ + (1|block),
data = cn_data)
percent_nitrogen_lmer
summary(percent_nitrogen_lmer)
library(car)
library(emmeans)
Anova(percent_nitrogen_lmer)
#### define the mixed effects model
percent_nitrogen_lmer = lmer(nitrogen_percent ~ treatment * species * organ + (1|block),
data = cn_data)
Anova(percent_nitrogen_lmer)
emmeans(percent_nitrogen_lmer, ~treatment)
emmeans(percent_nitrogen_lmer, ~treatment*species)
cld(emmeans(percent_nitrogen_lmer, ~treatment*species))
cld(emmeans(percent_nitrogen_lmer, ~organ*species))
cld(emmeans(percent_nitrogen_lmer, ~treatment))
