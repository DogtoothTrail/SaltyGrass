scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 8) + # change y-axis limits on graph
ylab('Shoot mass (g)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
mass_plot_root = ggplot(data = subset(mass_data, organ == 'R'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2.5), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2.5), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root mass (g)') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
jpeg(filename = "plots/revised/Figure2.jpeg", width = 8, height = 12, units = 'in', res = 600)
multiplot(mass_plot_shoot, mass_plot_root, cols=1)
dev.off()
mass_plot_shoot = ggplot(data = subset(mass_data, organ == 'S'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 1),
legend.justification = c(1, 1), # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (dS/m)') + # change label for legend
ylim(0, 8) + # change y-axis limits on graph
ylab('Shoot mass (g)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
mass_plot_root = ggplot(data = subset(mass_data, organ == 'R'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root mass (g)') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
mass_plot_shoot = ggplot(data = subset(mass_data, organ == 'S'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 1),
legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16)
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (dS/m)') + # change label for legend
ylim(0, 8) + # change y-axis limits on graph
ylab('Shoot mass (g)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
mass_plot_root = ggplot(data = subset(mass_data, organ == 'R'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root mass (g)') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
jpeg(filename = "plots/revised/Figure2.jpeg", width = 8, height = 12, units = 'in', res = 600)
multiplot(mass_plot_shoot, mass_plot_root, cols=1)
dev.off()
mass_plot_shoot = ggplot(data = subset(mass_data, organ == 'S'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 1),
legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (dS/m)') + # change label for legend
ylim(0, 8) + # change y-axis limits on graph
ylab('Shoot mass (g)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
mass_plot_root = ggplot(data = subset(mass_data, organ == 'R'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root mass (g)') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
jpeg(filename = "plots/revised/Figure2.jpeg", width = 8, height = 12, units = 'in', res = 600)
multiplot(mass_plot_shoot, mass_plot_root, cols=1)
dev.off()
mass_plot_shoot = ggplot(data = subset(mass_data, organ == 'S'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 1),
legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (dS/m)') + # change label for legend
ylim(0, 8) + # change y-axis limits on graph
ylab('Shoot mass (g)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
mass_plot_root = ggplot(data = subset(mass_data, organ == 'R'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root mass (g)') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
jpeg(filename = "plots/revised/Figure2.jpeg", width = 8, height = 12, units = 'in', res = 600)
multiplot(mass_plot_shoot, mass_plot_root, cols=1)
dev.off()
mass_plot_shoot = ggplot(data = subset(mass_data, organ == 'S'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = c(1, 1),
legend.justification = c(1, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salinity treatment (dS/m)') + # change label for legend
ylim(0, 8) + # change y-axis limits on graph
ylab('Shoot mass (g)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
mass_plot_root = ggplot(data = subset(mass_data, organ == 'R'), aes(x = species, y = mass, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root mass (g)') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
jpeg(filename = "plots/revised/Figure2.jpeg", width = 8, height = 12, units = 'in', res = 600)
multiplot(mass_plot_shoot, mass_plot_root, cols=1)
dev.off()
jpeg(filename = "plots/revised/Figure3.jpeg", width = 16, height = 21, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
### percent N plot
cn_data$salt_treatment = factor(cn_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
percent_nitrogen_plot_shoot = ggplot(data = subset(cn_data, organ == 'S'), aes(x = species, y = nitrogen_percent, fill = salt_treatment)) +
theme(legend.position = c(0, 1), # change where the legend is
legend.justification = c(0, 1), # change where the legend is
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salinity treatment (dS/m)') + # change label for legend
ylim(0, 6) + # change y-axis limits on graph
ylab('Shoot N (%)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "A")
percent_nitrogen_plot_root = ggplot(data = subset(cn_data, organ == 'R'), aes(x = species, y = nitrogen_percent, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 4) + # change y-axis limits on graph
ylab('Root N (%)') +  # change label on y-axis
xlab('') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "B")
### CN plot
cn_data$salt_treatment = factor(cn_data$treatment, levels = c('0', '8', '16', '24'), ordered = T)
cn_plot_shoot = ggplot(data = subset(cn_data, organ == 'S'), aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 100) + # change y-axis limits on graph
ylab('Shoot C:N') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "C")
cn_plot_root = ggplot(data = subset(cn_data, organ == 'R'), aes(x = species, y = cn, fill = salt_treatment)) +
theme(legend.position = 'none', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black"),
plot.tag = element_text(size = 30)) + # change box of legend
geom_boxplot() + # plot the data as a boxplot
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 100) + # change y-axis limits on graph
ylab('Root C:N') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = expression(italic("B. gracilis")),
"BM" = expression(italic("C. dactylon")),
"LB" = expression(italic("S. scoparium")),
"SG"= expression(italic("B. curtipendula")))) +
labs(tag = "D")
jpeg(filename = "plots/revised/Figure3.jpeg", width = 16, height = 21, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
dev.off()
jpeg(filename = "plots/revised/Figure3.jpeg", width = 7, height = 12, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
dev.off()
jpeg(filename = "plots/revised/Figure3.jpeg", width = 12, height = 12, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
dev.off()
jpeg(filename = "plots/revised/Figure3.jpeg", width = 14, height = 12, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
dev.off()
jpeg(filename = "plots/revised/Figure3.jpeg", width = 15, height = 12, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
dev.off()
jpeg(filename = "plots/revised/Figure3.jpeg", width = 16, height = 14, units = 'in', res = 600)
multiplot(percent_nitrogen_plot_shoot, percent_nitrogen_plot_root,
cn_plot_shoot, cn_plot_root, cols=2)
dev.off()
### germination plot
germination_probs = summary(emmeans(germination_lm, ~treatment_factor*species, type = "response"))
germination_probs$salt_treatment = factor(germination_probs$treatment, levels = c('0', '8', '16', '24'), ordered = T)
germination_plot = ggplot(data = germination_probs, aes(x = species, y = prob, fill = salt_treatment)) +
theme(legend.position = 'right', # change where the legend is
axis.title.y=element_text(size=rel(2), colour = 'black'), # change y axis title properties
axis.title.x=element_text(size=rel(2), colour = 'black'), # change x axis title properties
axis.text.x=element_text(size=rel(2), colour = 'black'), # change x axis text properties
axis.text.y=element_text(size=rel(2), colour = 'black'), # change y axis text properties
panel.background = element_rect(fill = 'white', colour = 'black'), # change background panel colors
panel.grid.major = element_line(colour = "grey"), # change backgrond color
legend.background = element_blank(), # change background of legend
legend.box.background = element_rect(colour = "black")) + # change box of legend
geom_col(position = "dodge", col = 'black') + # plot the data as a barplot
geom_errorbar(aes(ymin = prob - SE, ymax = prob + SE), position = position_dodge(0.9), width = 0.4) + # add error bars
scale_fill_brewer(palette="Greys") + #use the greys palette (see: https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)
labs(fill = 'Salt treatment (ds/m)') + # change label for legend
ylim(0, 1) + # change y-axis limits on graph
ylab('Prob. of germination') +  # change label on y-axis
xlab('Species') + # change label on x axis
scale_x_discrete(labels=c("BG" = "B. gracilis", "BM" = "C. dactylon",
"LB" = "S. scoparium", "SG"= "B. curtipendula"))
germination_plot
jpeg(filename = "plots/revised/Figure1.jpeg", width = 12, height = 7, units = 'in', res = 600)
plot(germination_plot)
dev.off()
library(stringr)
library(lme4)
library(car)
library(emmeans)
library(ggplot2)
library(dplyr)
library(ciTools)
library(gtable)
library(grid)
library(gridExtra)
## define a function for multi-panel plots
multiplot <- function(..., plotlist=NULL, cols) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# Make the panel
plotCols = cols                          # Number of columns of plots
plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
# Make each plot, in the correct location
for (i in 1:numPlots) {
curRow = ceiling(i/plotCols)
curCol = (i-1) %% plotCols + 1
print(plots[[i]], vp = vplayout(curRow, curCol ))
}
}
## load data
cn_data_raw = read.csv('../Data/saltygrass_cn.csv')
height_data_raw = read.csv('../Data/Finalized_Height_Data_Linear.csv')
mass_data_raw = read.csv("../Data/Mass_Measurements.csv")
germination_data_raw = read.csv("../Data/germination_data.csv")
## curate the CN data
### remove the QC values
cn_data_noQC = subset(cn_data_raw, sample_id != 'QC')
### change sample id to character
cn_data_noQC$sample_id = as.character(cn_data_noQC$sample_id)
### adding missing periods
cn_data_noQC$sample_id[2] = "LB.1.8.S"
cn_data_noQC$sample_id[3] = "LB.1.16.S"
cn_data_noQC$sample_id[4] = "LB.1.24.S"
cn_data_noQC$sample_id[5] = "LB.2.0.S"
cn_data_noQC$sample_id[6] = "LB.2.8.S"
cn_data_noQC$sample_id[7] = "LB.2.16.S"
cn_data_noQC$sample_id[8] = "LB.2.24.S"
cn_data_noQC$sample_id[9] = "LB.3.0.S"
cn_data_noQC$sample_id[10] = "LB.3.8.S"
cn_data_noQC$sample_id[11] = "LB.3.16.S"
cn_data_noQC$sample_id[98] = "SG.1.8.R"
### split the sample id into separate columns
sample_id_list_cn = strsplit(as.character(cn_data_noQC$sample_id), "[.]")
cn_data_noQC$species = unlist(lapply(sample_id_list_cn, `[[`, 1))
cn_data_noQC$block = unlist(lapply(sample_id_list_cn, `[[`, 2))
cn_data_noQC$treatment = unlist(lapply(sample_id_list_cn, `[[`, 3))
cn_data_noQC$organ = unlist(lapply(sample_id_list_cn, `[[`, 4))
cn_data = cn_data_noQC
## curate the height data
## split the sample id into separate columns
sample_id_list_height = strsplit(as.character(height_data_raw$Sample), "[.]")
height_data_raw$treatment = unlist(lapply(sample_id_list_height, `[[`, 2))
height_data_raw$rep = unlist(lapply(sample_id_list_height, `[[`, 3))
height_data_raw_sample_block =strsplit(unlist(lapply(sample_id_list_height, `[[`, 1)),
"(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)
height_data_raw$block = unlist(lapply(height_data_raw_sample_block, '[[', 2))
height_data_raw$species = unlist(lapply(height_data_raw_sample_block, '[[', 1))
height_data = height_data_raw
## curate the mass data
### split the sample id into seperate columns
sample_id_list_mass = strsplit(as.character(mass_data_raw$pot), "[.]")
mass_data_raw$species = unlist(lapply(sample_id_list_mass, `[[`, 1))
mass_data_raw$block = unlist(lapply(sample_id_list_mass, `[[`, 2))
mass_data_raw$treatment = unlist(lapply(sample_id_list_mass, `[[`, 3))
mass_data = mass_data_raw
## curate the germination data (nothing to do really)
germination_data = germination_data_raw
## print data (for publication)
write.csv(cn_data, '../Data/curated_from_analysis/cn_data.csv')
write.csv(mass_data, '../Data/curated_from_analysis/mass_data.csv')
write.csv(germination_data, '../Data/curated_from_analysis/germination_data.csv')
write.csv(cn_data, '../Data/curated_from_analysis/cn_data.csv', row.names = F)
write.csv(germination_data, '../Data/curated_from_analysis/germination_data.csv', row.names = F)
write.csv(mass_data, '../Data/curated_from_analysis/mass_data.csv', row.names = F)
